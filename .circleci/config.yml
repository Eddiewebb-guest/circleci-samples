workflows:
  version: 2
  build-deploy:
    jobs:
      - isolated
      - merged:
          requires: [isolated]
          filters:
            branches:
              ignore: [master]

version: 2
jobs:
  isolated:
    docker:
      - image: circleci/python:2-jessie
    #docker:
    #  - image: aeternity/builder
    #    user: builder
    #working_directory: ~/epoch
    parallelism: 2
    working_directory: ~/repo
    steps:
      - checkout
      - save_cache:
          key: source-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - run: echo "passed"

  merged:
    docker:
      - image: circleci/python:2-jessie
    #docker:
    #  - image: aeternity/builder
    #    user: builder
    #working_directory: ~/epoch
    parallelism: 2
    working_directory: ~/repo
    steps:
      - run:
          name: Merge latest from master
          command: |
            if [ "x" != "x${CIRCLE_PULL_REQUEST}" ];then
              echo "Build is part of a PR, try merged build"
              # in case of forked repos, this is not actually upstream..
              echo "Clone: git@github.com:${CIRCLE_PR_USERNAME}/${CIRCLE_PR_REPONAME}.git"
              git clone git@github.com:${CIRCLE_PR_USERNAME}/${CIRCLE_PR_REPONAME}.git
              git merge ${CIRCLE_BRANCH}
              if [ $? -ne 0 ];then
                echo "Merge fail, conflicts. Please merge latest form master manually"
                exit 1
              fi
              git status
              git log -n2
            else
              echo "Not a PR, skipping merge"
            fi
